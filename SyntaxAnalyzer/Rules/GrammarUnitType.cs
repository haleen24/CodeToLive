namespace SyntaxAnalyzer.Rules;

public enum GrammarUnitType  // Список всех составных грамматических единиц
                             // (простые представлены LexemType)
                             // Определения записан в rules.txt
{
    SNL,
    Separator,
    IndexatorOperator,
    OverloadableOperator,
    OperatorOverload,
    Conversion,
    AttributeName,
    Accessor,
    Attribute,
    Indexator,
    Variables,
    FinalVariables,
    LeftExpressionSequence,
    AssignableSequence,
    AssignOperator,
    OptionalComma,
    AssignStatement,
    Parenth,
    ElseStmt,
    OptionalElse,
    IfStmt,
    WhileStmt,
    OptionalInlineStmt,
    OptionalExpression,
    ForStmt,
    ForeachStmt,
    OptionalIdentifier,
    CatchStmt,
    CatchSequence,
    FinallyStmt,
    OptionalFinally,
    CatchBlock,
    TryBody,
    TryStmt,
    BreakStmt,
    ContinueStmt,
    ReturnStmt,
    ThrowStmt,
    ImportStmt,
    OptionalStatic,
    FieldModifier,
    OptionalFieldModifier,
    FieldStmt,
    NamedArgument,
    CommaWithNewLine,
    ParamsFormalArgument,
    FormalArgument,
    FunctionFormalArguments,
    OptionalFunctionFormalArguments,
    GetterDeclaration,
    SetterDeclaration,
    FunctionName,
    FunctionDeclaration,
    FunctionDefinition,
    SuperclassList,
    SuperclassesDeclaration,
    OptionalSuperclassesDeclaration,
    ClassDefinition,
    FunctionDeclarationSequence,
    FunctionDeclarationBlock,
    InterfaceBody,
    InterfaceDefinition,
    OptionalStmt,
    NonemptyStmtSequence,
    StmtSequence,
    Block,
    Module,
    ParamsActualArgument,
    ActualArgument,
    FunctionActualArguments,
    OptionalFunctionActualArguments,
    FunctionCall,
    UnaryOperator,
    UnaryExpression,
    BinaryOperator,
    ExpressionWithBinaryOperators,
    Expression,
    TernaryOperator,
    OptionalTernaryOperator,
    PossibleAttribute,
    ExpressionPart,
    ExpressionPartSequence,
    OptionalExpressionPartSequence,
    AtomicExpression,
    Lambda,
    InlineStmt,
    Stmt,
    ExpressionWithoutBinaryOperators,
    ExpressionSequence,
    OptionalExpressionSequence,
    ListLiteral,
    SetLiteral,
    TupleBody,
    OptionalTupleBody,
    TupleLiteral,
    KeyValuePair,
    DictBody,
    OptionalDictBody,
    DictLiteral
}